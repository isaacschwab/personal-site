[
  {
    "type" : "project",
    "slug" : "party-pack",
    "title" : "Party Pack",
    "description" : "A socket.io based web app for friends to play party style games, like trivia, using their phones as controllers.",
    "task" : ["Create a room based game", "Improve React skillset", "Gain exposure to socket.io"],
    "skills" : ["NodeJS", "React", "socket.io"],
    "long-desc" : "I started this project as a way to experiment with socket.io, NodeJS, and React. I figured that in addition to expanding my knowledge of these technologies, I could have some fun building a web app that could be used amongst friends. Since I started the project, I find myself coming back to it every couple months to add more functionality. In its current state, Party Pack consists of a nodeJS server, and a React website, which is how users interact with the site. Socket.io is used to perform all communication between the users of the site. The intention of Party Pack is to connect friends in person or virtually, through party style games, so what are the games?<br><br>The initial game that I built is called Trivia Blast. This game can be played with any number of players, either on mobile or desktop browsers. In this game there needs to be a host device, which acts as the main display for the game. It works best for the host to either cast or connect their display to a TV, or if playing virtually, the host can stream their screen. The players then connect using the room code that was generated for the host. The host can configure settings, and then when everyone is connected, start the game. Gameplay is currently round based trivia. Each round consists of a question, and multiple potential answers. When the round starts, users get the answers displayed on their devices, and need to select an answer before time runs out. A fun mechanic to work with in this gamemode was time. Each question has a set amount of time, and based on when a user answers the question they receive a higher score. Once the time has completed, player devices can no longer answer, and the correct answer is displayed on the host screen. The scoreboard is shown in-between each round and at the end of the game to show the final standings.<br><br>I have a list of improvements and ideas that I plan to add to Trivia Blast and Party Pack as a whole. Some of the main ones include: improved visuals/design, connect/reconnect functionality, new scoring modes, animations, improved performance, and a persistent database. And of course, I’d like to add new game modes. I have started an implementation of the Spotify SDK to help build a base for a music based gamemode.<br><br>Overall, I see this as a fun side project that I can slowly build upon, and use as a medium to explore web technologies. It also has the added benefit of being used when spending time with friends and family.",
    "url" : "https://party-pack.herokuapp.com/",
    "image" : {
      "src" : "../images/projects/partypack-main.png",
      "alt" : "View of Party Pack Trivia Blast"
    },
    "detail" : [
      {
        "title" : "How it works",
        "text" : "The web app works on desktop or mobile browsers, and requires a host device, in addition to the other player's devices. Hosts should either cast the game to a TV (if playing in person) or stream their screen to other players. Currently, Trivia Blast is the functioning gamemode, so I will use that as an example. In the future I plan to add more gamemodes.",
        "caption" : "Homepage of Party Pack, players can join games using a code, and hosts can start a new game lobby.",
        "image" : {
          "src" : "../images/projects/partypack/partypack-howitworks.png",
          "alt" : "Homescreen of Party Pack web app, page has two sections, one for players to join, one for host to create a game"
        }
      },
      {
        "title" : "Host Creates a Game",
        "text" : "The host device starts a game, which creates a unique socket.io room on the server that can be joined with the code. After creating the game the host waits for players to join and can adjust game settings.",
        "caption" : "Host view of Trivia Blast game, waiting for players to join using the code.",
        "image" : {
          "src" : "../images/projects/partypack/partypack-hostcreate.png",
          "alt" : "Host page of Party Pack - Trivia Blast, displays options such as difficulty, category, etc.."
        }
      },
      {
        "title" : "Player Joins a Game",
        "text" : "To join a game, players simply enter the unique code, which will add them to the game, this is reflected on the host screen, in addition to the player screen.",
        "caption" : "Host view of Trivia Blast game, now with players joined.",
        "image" : {
          "src" : "../images/projects/partypack/partypack-joined.png",
          "alt" : "Host page of Party Pack - Players are now connected."
        }
      },
      {
        "title" : "Questions",
        "text" : "The host game now displays a question for the set amount of time. Each players' device will show the respective questions on their device and can submit an answer before the time runs out.",
        "caption" : "The host display of a Trivia Blast round in progress. Players see the same questions and answers on their device and must select an answer before time runs out.",
        "image" : {
          "src" : "../images/projects/partypack/partypack-question.png",
          "alt" : "Host page of Party Pack - Question of Trivia Blast"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "The host display of the correct answer at the end of a round.",
        "image" : {
          "src" : "../images/projects/partypack-main.png",
          "alt" : "Host page of Party Pack - Question of Trivia Blast with the answer highlighted"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "A collection a views from a player device on a mobile browser.",
        "image" : {
          "src" : "../images/projects/partypack/partypack-mobile.png",
          "alt" : "A collection a views from a player device on a mobile browser"
        }
      }
    ]
  },
  {
    "type" : "project",
    "slug" : "led-stars",
    "title" : "Fiber Optic Strand Star Photos",
    "description" : "A more hands on project where I use astrophotography images plus fiber optic strands to create a different type of starscape experience. After proof of concept, I explore the possibility of using astro libraries to generate star maps for future pieces.",
    "task" : ["Combine a physical project with coding", "Explore astrology libraries and code", "Use Python to apply image processing"],
    "skills": ["d3.js", "GatsbyJS", "Python - OpenCV"],
    "long-desc" : "I was inspired to start this project from posts I had seen about star ceilings that people were building in their houses. As building a new ceiling wasn’t an option, I thought a scaled down version would be a fun project. I decided to use an astrophotography photo for the template in the initial proof of concept. The image was printed and then glued to some cardboard. The next steps were pretty slow and monotonous. I poked holes, fed the fiber optic strands through, and glued them in place, one by one. Eventually, I ended up with the proof of concept you see below in the first picture.<br><br>I was happy with the test, but wanted to now include a coding element to this project. I wanted to improve how to determine which stars to feed fiber strands through. For this I used the OpenCV library in Python to detect the star's brightness. The idea was to pick out the brightest stars and set a limit based on the number of fiber strands I could use. This resulted in an image with just the stars, all other detail was removed. Even with the stars that I wanted highlighted, I lacked any control of the stars in the sky, and was limited to a limited selection of astrophotography photos.<br><br>To remedy this issue, I wanted to attempt generating the night sky. I found some d3.js libraries that people had created solely for this purpose. I forked an astronomy library called celestial-d3, and started making modifications. The initial changes I worked towards were dropping the library into React and Gatsby, followed by outputting the image as an svg. The generated star approach had the added benefit of complete control of the stars (number, size, color, etc.) and better control over exporting the image for use as a template.<br><br>Next steps include improving on each part of the project as a whole. I need to alter the process of creating the physical fiber optic night sky. I plan to use different materials, and would like to semi-automate part of the task. I’m going to move forward with the d3-celestial part of the project, over OpenCV. I enjoyed learning an astronomy library to generate the stars, and believe the potential it provides is superior to actual photos. I will keep making changes to my fork of the library, so that my next revision to the physical product is of much higher quality.",
    "image" : {
      "src" : "../images/projects/ledstars-main.jpg",
      "alt" : "Astrophotography image with fiber optic strands connected to each star"
    },
    "detail" : [
      {
        "title" : "",
        "text" : "",
        "caption" : "The completed proof of concept.",
        "image" : {
          "src" : "../images/projects/ledstars-main.jpg",
          "alt" : "Astrophotography image with fiber optic strands connected to each star"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "The LED light engine that powers the project.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-lights.jpg",
          "alt" : "LED light engine and fiber optic strand bundle"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "Poking a lot of holes through the stars.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-holes.jpg",
          "alt" : "A pointed end tool being used to poke holes to feed the fiber optic strands through"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "All of the holes for the strands marked and sectioned.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-planning.jpg",
          "alt" : "Holes for the strands are circled to make it easier to find"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "The strands are pushed through and then glued down on the backside. After I complete a section I cutoff the excess material.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-strands.jpg",
          "alt" : "View of the fiber optic strands poking through the star holes"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "Testing out the progress with the light engine turned on.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-progress.jpg",
          "alt" : "Fiber optic strands are lit up for part of the stars that have been completed"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "A generated star sky using a modified celestial-d3 astro library.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-canvas.png",
          "alt" : "A generated star sky using a modified celestial-d3 astro library"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "The above section of night sky rendered as an svg. This was output using my forked version of celestial-d3, running on a local GatsbyJS site.",
        "image" : {
          "src" : "../images/projects/ledstars/ledstars-svgoutput.png",
          "alt" : "A generated star sky using celestial-d3 astro library"
        }
      }
    ]
  },
  {
    "type" : "project",
    "slug" : "nightscapes",
    "title" : "Long-Exposure Starscape Photography",
    "description" : "Looking up to the stars has always been awe inspiring. After seeing many long-exposure astrophotography and nightscapes, I attempt my own in Northern Minnesota.",
    "task" : ["Create a room based game", "Improve React skillset", "Gain exposure to socket.io"],
    "skills": ["Adobe Lightroom, Adobe Photoshop"],
    "long-desc" : "",
    "image" : {
      "src" : "../images/projects/starscape-main.jpg",
      "alt" : "Long exposure photo of the stars in the night sky"
    },
    "detail" : [
      {
        "title" : "",
        "text" : "",
        "image" : {
          "src" : "../images/projects/partypack/partypack-howitworks.png",
          "alt" : "Homescreen of Party Pack web app, page has two sections, one for players to join, one for host to create a game"
        }
      },
      {
        "title" : "",
        "text" : "",
        "image" : {
          "src" : "../images/projects/partypack/partypack-howitworks.png",
          "alt" : "Homescreen of Party Pack web app, page has two sections, one for players to join, one for host to create a game"
        }
      }
    ]
  },
  {
    "type" : "work",
    "slug" : "progresso-soup",
    "title" : "Progresso Soups",
    "description" : "The consumer facing website for the Progresso Soups brand.",
    "task" : ["Build a performant, appealing, and accessible website", "Integrate product and recipe data from internal APIs", "Create a multi-tier navigation menu"],
    "skills": ["GatsbyJS", "Wordpress", "React"],
    "long-desc" : "This website was one of my favorite projects at General Mills. The goal was to create a site that could handle a lot of product and recipe data, while being very fast. Our team had done some prior work with Gatsby, so I knew it was the obvious choice. Not only did Gatsby provide the incredible performance that was required, it also had the built in flexibility to handle multiple data sources. The project also allowed me to build a modular Gatsby template for our team to use as a starting point for additional Gatsby websites.<br><br>When building this template, I had to keep to a few criteria. First, some data needed to be sourced from Wordpress so that our content team could continue authoring like they do with our full-fledged Wordpress websites. To enable this functionality, I used the gatsby-source-wordpress library to pull data from a headless Wordpress instance. Next, I needed to convert our team’s design and layout modules from PHP to React. This was actually quite enjoyable, as I prefer React to PHP, not to mention React allowed some quality refactoring, especially in the product and recipe filtering pages. The last big ticket item for the Gatsby template was sourcing internal API data. I was able to pull recipe/product data into Gatsby, and generate pages from the data. This approach provided huge time savings over the traditional approach of manually authoring data for recipes in Wordpress.<br><br>This was the first multi-tier navigation menu for our team, so I had the challenge of building the first version. I would again need to source the menu data from the Wordpress CMS, and then create the actual menu in React. Creating an accessible menu is quite a process, but in the end I was very happy with the result. I definitely enjoyed creating it in React more than I did when I built it again in PHP a month later!<br><br>I really enjoyed the work our design team did for this site. Not only does the end product look great, but the custom css was a fun part of the site build.",
    "icon" : {
      "src" : "../images/work/progresso/soup.svg",
      "alt" : "Icon of steaming cup of soup"
    },
    "image" : {
      "src" : "../images/work/progresso/progresso-main.png",
      "alt" : "Hero image of Progresso.com"
    },
    "url" : "https://www.progresso.com/",
    "detail" : [
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/home.png",
          "alt" : "Homepage of Progresso Soups website"
        }
      },
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/navbar.png",
          "alt" : "Progresso soups navigation menu expanded"
        }
      },
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/products.png",
          "alt" : "Progresso products listing page, showcases advanced filtering"
        }
      },
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/recipes.png",
          "alt" : "Progresso recipes listing page, showcases advanced filtering"
        }
      },
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/productdetail.png",
          "alt" : "Progresso product detail page"
        }
      },
      {
        "caption" : "",
        "image" : {
          "src" : "../images/work/progresso/recipedetail.png",
          "alt" : "Progresso recipe detail page"
        }
      }
    ]
  },
  {
    "type" : "work",
    "slug" : "boxtops4education",
    "title" : "Box Tops for Education",
    "description" : "Building and maintaining the services and data that power the mobile Box Tops for Education app.",
    "task" : ["Enable new app features via the API", "Improve API performance", "Build tooling to support the app services"],
    "skills": [".NET", "SQL", "Postman"],
    "long-desc" : "A Gatsby + Wordpress solution that consumes data from internal APIs. Features advanced filtering and multi-tier navigation menu.",
    "icon" : {
      "src" : "../images/work/boxtops/boxtop.svg",
      "alt" : "Icon of a Box Top ticket"
    },
    "image" : {
      "src" : "../images/work/boxtops/boxtops-main.png",
      "alt" : "Hero of boxtops4education.com"
    },
    "url" : "https://www.boxtops4education.com/",
    "detail" : [
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/larabar/home.png",
          "alt" : "Homepage of Larabar Canada website"
        }
      }
    ]
  },
  {
    "type" : "work",
    "slug" : "chex-mix",
    "title" : "Chex Mix",
    "description" : "A Wordpress website with product specific patterns and a simplified authoring experience.",
    "task" : ["Build a performant, appealing, and accessible website", "Enable product unique patterns", "Create a simplified authoring experience"],
    "skills": ["Wordpress", "CSS", "PHP"],
    "long-desc" : "A Gatsby + Wordpress solution that consumes data from internal APIs. Features advanced filtering and multi-tier navigation menu.",
    "icon" : {
      "src" : "../images/work/chex/chex.svg",
      "alt" : "Icon of a Chex piece"
    },
    "image" : {
      "src" : "../images/work/chex/chex-main.png",
      "alt" : "Hero of Chex.com"
    },
    "url" : "https://www.chexmix.com/",
    "detail" : [
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/chex/home.png",
          "alt" : "Homepage of Chex Mix website"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/chex/productdetail.png",
          "alt" : "Product detail page of Chex Mix website"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/chex/products.png",
          "alt" : "Product listing page of Chex Mix website"
        }
      }
    ]
  },
  {
    "type" : "work",
    "slug" : "larabar-ca",
    "title" : "Larabar Canada",
    "description" : "A multilingual Wordpress solution with bright colors, fun imagery, and a two tier navigation menu.",
    "task" : ["Build a performant, appealing, and accessible website", "Integrate product and recipe data from internal APIs", "Create a multi-tier navigation menu"],
    "skills": ["GatsbyJS", "Wordpress", "React"],
    "long-desc" : "A Gatsby + Wordpress solution that consumes data from internal APIs. Features advanced filtering and multi-tier navigation menu.",
    "icon" : {
      "src" : "../images/work/larabar/protein-bar.svg",
      "alt" : "Icon of a protein bar"
    },
    "image" : {
      "src" : "../images/work/larabar/larabar-main.png",
      "alt" : "Icon of a protein bar"
    },
    "url" : "https://www.larabar.ca/",
    "detail" : [
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/larabar/home.png",
          "alt" : "Homepage of Larabar Canada website"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/larabar/products.png",
          "alt" : "Listing of products on the Larabar website"
        }
      },
      {
        "title" : "",
        "text" : "",
        "caption" : "",
        "image" : {
          "src" : "../images/work/larabar/productdetail.png",
          "alt" : "Detail view of a product detaul page on the Larabar website"
        }
      }
    ]
  }
]